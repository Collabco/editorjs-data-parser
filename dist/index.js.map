{"mappings":"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","sources":["src/index.ts","src/tools/index.ts","src/tools/components/checkList.ts","src/tools/components/code.ts","src/tools/components/delimiter.ts","src/tools/components/embed.ts","src/tools/components/header.ts","src/tools/components/image.ts","src/tools/components/link.ts","src/tools/components/list.ts","src/tools/components/paragraph.ts","src/tools/components/quote.ts","src/tools/components/raw.ts","src/tools/components/table.ts","src/tools/components/warning.ts"],"sourcesContent":["import {\r\n  checklist,\r\n  code,\r\n  delimiter,\r\n  embed,\r\n  header,\r\n  image,\r\n  link,\r\n  list,\r\n  paragraph,\r\n  quote,\r\n  raw,\r\n  table,\r\n  warning,\r\n} from './tools/index';\r\n\r\nconst editorJsParser = (value: any[]) => {\r\n  let editorData = '';\r\n\r\n  try {\r\n    value.forEach((element: { type?: string; data: any }) => {\r\n      switch (element.type) {\r\n        case 'checklist':\r\n          editorData += checklist(element.data.items);\r\n          break;\r\n        case 'code':\r\n          editorData += code(element);\r\n          break;\r\n        case 'delimiter':\r\n          editorData += delimiter()\r\n          break;\r\n        case 'embed':\r\n          editorData += embed(element.data);\r\n          break;\r\n        case 'header':\r\n          editorData += header(element.data.text, element.data.level);\r\n          break;\r\n        case 'image':\r\n          editorData += image(element.data);\r\n          break;\r\n        case 'link':\r\n          editorData += link(element.data.link);\r\n          break;\r\n        case 'list':\r\n          editorData += list(element.data.items);\r\n          break;\r\n        case 'paragraph':\r\n          editorData += paragraph(element.data.text);\r\n          break;\r\n        case 'quote':\r\n          editorData += quote(element.data.caption, element.data.text);\r\n          break;\r\n        case 'raw':\r\n          editorData += raw(element.data.html);\r\n          break;\r\n        case 'table':\r\n          editorData += table(element);\r\n          break;\r\n        case 'warning':\r\n          editorData += warning(element.data);\r\n          break;\r\n        default:\r\n          editorData += '';\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return editorData;\r\n};\r\n\r\nexport { editorJsParser };\r\n","export { checklist } from './components/checkList';\r\nexport { code } from './components/code';\r\nexport { delimiter } from './components/delimiter';\r\nexport { embed } from './components/embed';\r\nexport { header } from './components/header';\r\nexport { image } from './components/image';\r\nexport { link } from './components/link';\r\nexport { list } from './components/list';\r\nexport { paragraph } from './components/paragraph';\r\nexport { quote } from './components/quote';\r\nexport { raw } from './components/raw';\r\nexport { table } from './components/table';\r\nexport { warning } from './components/warning';","let value = '';\r\nexport const checklist = (param: { checked: boolean; text: string }[]) => {\r\n  value = '';\r\n  param.forEach((items: { checked: boolean; text: string }) => {\r\n    value += `<div class=\"ejs-form-check\">\r\n                    <input class=\"ejs-form-check__input\" type=\"radio\" name=\"ejsRadios\" id=\"ejsRadio\" value=\"option1\" ${\r\n                      items.checked ? 'checked' : ''\r\n                    }>\r\n                    <label class=\"ejs-form-check__label\" for=\"ejsRadio\">\r\n                    ${items.text}\r\n                    </label>\r\n                </div>\r\n      `;\r\n  });\r\n\r\n  return value;\r\n};\r\n","export const code = (param: { data: { code: any } }) => {\r\n  return `<pre class=\"ejs-code-block\">${param.data.code}</pre>`;\r\n};\r\n","export const delimiter = () => {\r\n  return `<div class=\"ejs-delimiter\"></div>`;\r\n};\r\n","export const embed = (param: { height: number; embed: any }) => {\r\n  let embedValue = '';\r\n  embedValue += `<iframe style=\"border: none;\" width='100%' height='${\r\n    param.height + 100\r\n  }' src='${param.embed}'></iframe>`;\r\n  return embedValue;\r\n};\r\n","export const header = (param: string, type: number) => {\r\n  let headerValue = '';\r\n  switch (type) {\r\n    case 1:\r\n      headerValue += `<h1 class=\"ejs-header ejs-h1\">${param}</h1>`;\r\n      break;\r\n    case 2:\r\n      headerValue += `<h2 class=\"ejs-header ejs-h2\">${param}</h2>`;\r\n      break;\r\n    case 3:\r\n      headerValue += `<h3 class=\"ejs-header ejs-h3\">${param}</h3>`;\r\n      break;\r\n    case 4:\r\n      headerValue += `<h4 class=\"ejs-header ejs-h4\">${param}</h4>`;\r\n      break;\r\n    case 5:\r\n      headerValue += `<h5 class=\"ejs-header ejs-h5\">${param}</h5>`;\r\n      break;\r\n    case 6:\r\n      headerValue += `<h6 class=\"ejs-header ejs-h6\">${param}</h6>`;\r\n      break;\r\n    default:\r\n      headerValue += '';\r\n  }\r\n  return headerValue;\r\n};\r\n","export const image = (param: { file: { url: string }; caption: string }) => {\r\n  return `<img src='${param.file.url}' alt='${param.caption}'/>`;\r\n};\r\n","export const link = (param: string) => {\r\n  return `<a href='${param}' target='_blank'>${param}</a>`;\r\n};\r\n","export const list = (param: any[]) => {\r\n  let listValue = '';\r\n\r\n  listValue += `<ol>`;\r\n\r\n  param.forEach((items: any) => {\r\n    listValue += `<li>${items}</li>`;\r\n  });\r\n\r\n  listValue += `</ol>`;\r\n\r\n  return listValue;\r\n};\r\n","export const paragraph = (param: string) => {\r\n  return `<p class=\"ejs-paragraph\">${param}</p>`;\r\n};\r\n","export const quote = (caption: string, text: string) => {\r\n  let quoteValue = '';\r\n  quoteValue += `<blockquote class=\"ejs-blockquote\">\r\n                    ${text}\r\n                    <footer class=\"ejs-blockquote__footer\">${caption}</footer>\r\n                 </blockquote>`;\r\n  return quoteValue;\r\n};\r\n","export const raw = (param: HTMLElement) => {\r\n  let rawValue = '';\r\n  rawValue += param;\r\n  return rawValue;\r\n};\r\n","export const table = (params: { data: { content: string[][] } }) => {\r\n  let tableHeader = '';\r\n  let tableBody = '';\r\n  let template = '';\r\n\r\n  params.data.content[0].forEach((header: string) => {\r\n    tableHeader += `<th>${header}</th>`;\r\n  });\r\n\r\n  for (let i = 1; i < params.data.content.length; i++) {\r\n    tableBody += `<tr>`;\r\n\r\n    params.data.content[i].forEach((body) => {\r\n      tableBody += `<td>${body}</td>`;\r\n    });\r\n    tableBody += `</tr>`;\r\n  }\r\n\r\n  template = `\r\n    <table class='ejs-table'>\r\n        <thead class='ejs-table__thead'>\r\n            <tr>\r\n                ${tableHeader}\r\n            <tr>\r\n        </thead>\r\n        <tbody class=\"ejs-table__body\">\r\n            ${tableBody}\r\n        </tbody>\r\n    </table>\r\n  `;\r\n\r\n  return template;\r\n};\r\n","export const warning = (params: { title: string; message: string }) => {\r\n  return `<figure id='ejs-warning-figure' class=\"ejs-warning\">\r\n                <figcaption>${params.title}</figcaption>\r\n                <p class=\"ejs-warning__p\">${params.message}</p>\r\n            </figure>`;\r\n};\r\n"],"names":[],"version":3,"file":"index.js.map"}