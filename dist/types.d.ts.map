{"mappings":"AaeA,OAAA,MAAM,wBAAyB,GAAG,EAAE,WAmDnC,CAAC","sources":["src/src/tools/components/checkList.ts","src/src/tools/components/code.ts","src/src/tools/components/embed.ts","src/src/tools/components/header.ts","src/src/tools/components/image.ts","src/src/tools/components/link.ts","src/src/tools/components/list.ts","src/src/tools/components/paragraph.ts","src/src/tools/components/quote.ts","src/src/tools/components/raw.ts","src/src/tools/components/table.ts","src/src/tools/components/warning.ts","src/src/tools/index.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import {\r\n  checklist,\r\n  code,\r\n  embed,\r\n  header,\r\n  image,\r\n  link,\r\n  list,\r\n  paragraph,\r\n  quote,\r\n  raw,\r\n  table,\r\n  warning,\r\n} from './tools/index';\r\n\r\nconst editorJsParser = (value: any[]) => {\r\n  let editorData = '';\r\n\r\n  try {\r\n    value.forEach((element: { type?: string; data: any }) => {\r\n      switch (element.type) {\r\n        case 'checklist':\r\n          editorData += checklist(element.data.items);\r\n          break;\r\n        case 'code':\r\n          editorData += code(element);\r\n          break;\r\n        case 'embed':\r\n          editorData += embed(element.data);\r\n          break;\r\n        case 'header':\r\n          editorData += header(element.data.text, element.data.level);\r\n          break;\r\n        case 'image':\r\n          editorData += image(element.data);\r\n          break;\r\n        case 'link':\r\n          editorData += link(element.data.link);\r\n          break;\r\n        case 'list':\r\n          editorData += list(element.data.items);\r\n          break;\r\n        case 'paragraph':\r\n          editorData += paragraph(element.data.text);\r\n          break;\r\n        case 'quote':\r\n          editorData += quote(element.data.caption, element.data.text);\r\n          break;\r\n        case 'raw':\r\n          editorData += raw(element.data.html);\r\n          break;\r\n        case 'table':\r\n          editorData += table(element);\r\n          break;\r\n        case 'warning':\r\n          editorData += warning(element.data);\r\n          break;\r\n        default:\r\n          editorData += '';\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return editorData;\r\n};\r\n\r\nexport { editorJsParser };\r\n"],"names":[],"version":3,"file":"types.d.ts.map"}