{"mappings":"AcgBA,OAAA,MAAM,wBAAyB,GAAG,EAAE,WAsDnC,CAAC","sources":["src/src/tools/components/checkList.ts","src/src/tools/components/code.ts","src/src/tools/components/delimiter.ts","src/src/tools/components/embed.ts","src/src/tools/components/header.ts","src/src/tools/components/image.ts","src/src/tools/components/link.ts","src/src/tools/components/list.ts","src/src/tools/components/paragraph.ts","src/src/tools/components/quote.ts","src/src/tools/components/raw.ts","src/src/tools/components/table.ts","src/src/tools/components/warning.ts","src/src/tools/index.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import {\n  checklist,\n  code,\n  delimiter,\n  embed,\n  header,\n  image,\n  link,\n  list,\n  paragraph,\n  quote,\n  raw,\n  table,\n  warning,\n} from './tools/index';\n\nconst editorJsParser = (value: any[]) => {\n  let editorData = '';\n\n  try {\n    value.forEach((element: { type?: string; data: any }) => {\n      switch (element.type) {\n        case 'checklist':\n          editorData += checklist(element.data.items);\n          break;\n        case 'code':\n          editorData += code(element);\n          break;\n        case 'delimiter':\n          editorData += delimiter()\n          break;\n        case 'embed':\n          editorData += embed(element.data);\n          break;\n        case 'header':\n          editorData += header(element.data.text, element.data.level);\n          break;\n        case 'image':\n          editorData += image(element.data);\n          break;\n        case 'link':\n          editorData += link(element.data.link);\n          break;\n        case 'list':\n          editorData += list(element.data.items);\n          break;\n        case 'paragraph':\n          editorData += paragraph(element.data.text);\n          break;\n        case 'quote':\n          editorData += quote(element.data.caption, element.data.text);\n          break;\n        case 'raw':\n          editorData += raw(element.data.html);\n          break;\n        case 'table':\n          editorData += table(element);\n          break;\n        case 'warning':\n          editorData += warning(element.data);\n          break;\n        default:\n          editorData += '';\n      }\n    });\n  } catch (error) {\n    console.error(error);\n  }\n\n  return editorData;\n};\n\nexport { editorJsParser };\n"],"names":[],"version":3,"file":"types.d.ts.map"}